### Starting build.
# Target: test.ml.depends, tags: { package(oUnit), package(qcheck), package(str), package(unix), debug, extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package str -package qcheck -modules test.ml > test.ml.depends
# Target: matrix.mli.depends, tags: { package(oUnit), package(qcheck), package(str), package(unix), debug, extension:mli, file:matrix.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package str -package qcheck -modules matrix.mli > matrix.mli.depends # cached
# Target: matrix.cmi, tags: { package(oUnit), package(qcheck), package(str), package(unix), byte, compile, debug, extension:mli, file:matrix.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package oUnit -package str -package qcheck -o matrix.cmi matrix.mli # cached
# Target: rationals.mli.depends, tags: { package(oUnit), package(qcheck), package(str), package(unix), debug, extension:mli, file:rationals.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package str -package qcheck -modules rationals.mli > rationals.mli.depends # cached
# Target: rationals.cmi, tags: { package(oUnit), package(qcheck), package(str), package(unix), byte, compile, debug, extension:mli, file:rationals.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package oUnit -package str -package qcheck -o rationals.cmi rationals.mli # cached
# Target: test.cmo, tags: { package(oUnit), package(qcheck), package(str), package(unix), byte, compile, debug, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package oUnit -package str -package qcheck -o test.cmo test.ml
# Target: matrix.ml.depends, tags: { package(oUnit), package(qcheck), package(str), package(unix), debug, extension:ml, file:matrix.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package str -package qcheck -modules matrix.ml > matrix.ml.depends # cached
# Target: matrix.cmo, tags: { package(oUnit), package(qcheck), package(str), package(unix), byte, compile, debug, extension:cmo, extension:ml, file:matrix.cmo, file:matrix.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package oUnit -package str -package qcheck -o matrix.cmo matrix.ml # cached
# Target: rationals.ml.depends, tags: { package(oUnit), package(qcheck), package(str), package(unix), debug, extension:ml, file:rationals.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package str -package qcheck -modules rationals.ml > rationals.ml.depends # cached
# Target: rationals.cmo, tags: { package(oUnit), package(qcheck), package(str), package(unix), byte, compile, debug, extension:cmo, extension:ml, file:rationals.cmo, file:rationals.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package unix -package oUnit -package str -package qcheck -o rationals.cmo rationals.ml # cached
# Target: test.byte, tags: { package(oUnit), package(qcheck), package(str), package(unix), byte, debug, dont_link_with, extension:byte, file:test.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -package unix -package oUnit -package str -package qcheck matrix.cmo rationals.cmo test.cmo -o test.byte
# Compilation successful.
